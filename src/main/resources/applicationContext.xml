<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd  
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd"
	default-lazy-init="true">

	<description>Spring公共配置 </description>
	
	<context:annotation-config />
	
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="locations">  
            <list>  
                <value>classpath:application-local.properties</value>
            </list>             
        </property>                             
    </bean>

	<!-- 配置SpringMVC的视图解析器 -->
	<!-- 其viewClass属性的默认值就是org.springframework.web.servlet.view.JstlView -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- 由于web.xml中设置是：由SpringMVC拦截所有请求,于是在读取静态资源文件的时候就会受到影响(说白了就是读不到) -->
	<!-- 经过下面的配置，该标签的作用就是：所有页面中引用"/js/**"的资源，都会从"/resources/js/"里面进行查找 -->
	<!-- 我们可以访问http://IP:8080/xxx/js/my.css和http://IP:8080/xxx/resources/js/my.css对比出来 -->
	<mvc:resources mapping="/js/**" location="/resources/js/" />
	<mvc:resources mapping="/css/**" location="/resources/css/" />
	<mvc:resources mapping="/html/**" location="/WEB-INF/html/" />
	<mvc:resources mapping="/web/**" location="/WEB-INF/" />
	<mvc:resources mapping="/error/**" location="/WEB-INF/error/" />
	
	<!-- MyBatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<property name="typeAliasesPackage" value="org.muxing" />
		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations" value="classpath*:/mybatis/*Mapper.xml" />
	</bean>

	<!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="org.muxing.*" />
		<property name="annotationClass"
			value="org.springframework.stereotype.Repository" />
	</bean>

	<!-- 数据源配置, 使用Tomcat JDBC连接池 -->

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<!-- Connection Info -->
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!-- Connection Pooling Info -->
		<property name="maxPoolSize" value="${jdbc.pool.maxPoolSize}" />
		<property name="minPoolSize" value="${jdbc.pool.minPoolSize}" />
	</bean>

	<!-- 数据源配置，使用不同的配置文件 -->
	<!-- production正式环境 -->
	<beans profile="production">
		<util:properties id="appPropertys"
			location="classpath:/application.properties" />
		<context:property-placeholder
			properties-ref="appPropertys" />
	</beans> 

	<!-- test测试环境 -->
	<beans profile="test">
		<util:properties id="appPropertys"
			location="classpath:/application-test.properties" />
		<context:property-placeholder
			properties-ref="appPropertys" />
	</beans>  
 
	<!-- local开发环境 -->
	<beans profile="local">
		<util:properties id="appPropertys"
			location="classpath:/application-local.properties" />
		<context:property-placeholder
			properties-ref="appPropertys" />
	</beans>

</beans>